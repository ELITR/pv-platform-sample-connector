This directory contains example backend and client implementations which
demonstrate the usage of the API. Besides the libaries in lib64 directory,
also libxml2 is required. All libraries are pre-compiled for 64-bit Linux.


Content:
--------
lib64			Required shared libraries libMCloud and libJibbigoShared
src			Example source code files
talk1313.mp4-16kHz.wav	Some example audio file


Example Command Lines:
----------------------
export LD_LIBRARY_PATH=lib64

First the backends need to be started
	./backendASR2 -s demo.audioma.it -p 60021 &


After that, the client can be started.
        ./ebclient -s demo.audioma.it -p 4445 -i en-DB -f en-DB ../../../audio/talk1313.mp4-16kHz.wav

Note that in this example you need to press enter in order to start sending the data.
With this call, the ASR results will be displayed only.


RAW XML protocoll:
------------------
If you are not happy with the convenience functions provided with the API,
the raw XML protocol can also be used, as specified in the Deliverable
D4.1. It is also possible to mix raw XML access and the usage of the
convenience functions. For example, you could use the convenience functions
for connecting to the MCloud, and receivig and sending packets, but work
with raw XML for processing the content of a data packet. However, be
aware, that if the XML format needs to be changed, the effort for updating
your components might be more as if you've used the convenience
functions.

The specified content of the data packets for audio, text, and word tokens
are just examples. It can be changed and also adjusted to specific needs.
The Mediator doesn't care about the content of a data packet, it just
passes it to the subsequent backend. However, in order to exchange data
between different integrated backend of different partners, each backend
should at least be able to understand the data packet formats provided.




